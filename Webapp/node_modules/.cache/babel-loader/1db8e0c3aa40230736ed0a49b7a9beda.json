{"ast":null,"code":"import { useState } from 'react'; //import { ethers } from \"ethers\";\n\nimport POSP from './POSP.json';\nimport { create } from 'ipfs-http-client';\n\nconst {\n  ethers\n} = require(\"ethers\");\n\nconst POSPAddress = '0x176d3abcb6c27802AacCA2B29102081ea3767125';\n\nasync function usehandleMint() {\n  console.log(\"handlemint called\");\n\n  if (window.ethereum) {\n    console.log(\"etherium detected\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(POSPAddress, POSP.abi, signer);\n    console.log(\"contract = \", contract);\n\n    try {\n      const response = await contract.mint(1, 2); //       const response = await contract.mint(BigNumber.from(mintAmount), {\n      //          value: ethers.utils.parseEther((0.0001*mintAmount).toString())\n      //        });\n\n      console.log('response: ', response);\n    } catch (err) {\n      console.log(\"error: \", err);\n    }\n  } else {\n    console.log(\"etherium not detected\");\n  }\n} // const MainMint = ({ accounts, setAccounts})=> {\n//   console.log(\"called main mint\")\n//   // const [mintAmount, setMintAmount] = useState(1);\n//   const isConnected = Boolean(accounts[0]);\n//   async function handleMint(){\n//     console.log(\"handlemint called\")\n//     if (window.ethereum){\n//       console.log(\"etherium detected\")\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       await provider.send(\"eth_requestAccounts\", []);\n//       const signer = provider.getSigner();\n//       const contract = new ethers.contract(\n//         POSPAddress,\n//         POSP.abi,\n//         signer\n//       );\n//       console.log(\"contract = \", contract)\n//       try {\n//         const response = await contract.mint(1,2);\n//         //       const response = await contract.mint(BigNumber.from(mintAmount), {\n// //          value: ethers.utils.parseEther((0.0001*mintAmount).toString())\n// //        });\n//         console.log('response: ', response);\n//       }catch(err){\n//         console.log(\"error: \", err)\n//       }\n//     }\n//     else {\n//       console.log(\"etherium not detected\")\n//     }\n//   }\n//   const handleDecrement = () =>{\n//     if(mintAmount<=1) return;\n//     setMintAmount (mintAmount -1);\n//   };\n//   const handleIncrement = () =>{\n// //   if(mintAmount >= 3) return;\n//     setMintAmount(mintAmount + 1)\n//   };\n//   return(\n//     <div>\n//        <p>Welcome to the future where your resume is a collection of NFTs</p>\n//        {isConnected?(\n//          <div>\n//            {/* <div>\n//              <button onClick={handleDecrement}>-</button>\n//              <input type=\"number\" value = {mintAmount}/>\n//              <button onClick={handleIncrement}>-</button>\n//            </div> */}\n//            {/* <button onClick = {handleMint}>Mint Now</button> */}\n//           </div>\n//        ):(\n//          <p>You are not connected to Mint. </p>\n//        )}\n//     </div>\n//   );\n// };\n// export default MainMint;\n\n\nexport default usehandleMint;","map":{"version":3,"sources":["/Users/haquefarazul/POSP/Webapp/src/MainMint.js"],"names":["useState","POSP","create","ethers","require","POSPAddress","usehandleMint","console","log","window","ethereum","provider","providers","Web3Provider","send","signer","getSigner","contract","Contract","abi","response","mint","err"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,WAAW,GAAG,4CAApB;;AAEA,eAAeC,aAAf,GAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,MAAIC,MAAM,CAACC,QAAX,EAAoB;AAClBH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMG,QAAQ,GAAG,IAAIR,MAAM,CAACS,SAAP,CAAiBC,YAArB,CAAkCJ,MAAM,CAACC,QAAzC,CAAjB;AACA,UAAMC,QAAQ,CAACG,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AACA,UAAMC,MAAM,GAAGJ,QAAQ,CAACK,SAAT,EAAf;AACA,UAAMC,QAAQ,GAAG,IAAId,MAAM,CAACe,QAAX,CACfb,WADe,EAEfJ,IAAI,CAACkB,GAFU,EAGfJ,MAHe,CAAjB;AAKAR,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,QAA3B;;AACA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,CAAc,CAAd,EAAgB,CAAhB,CAAvB,CADE,CAEF;AACN;AACA;;AACMd,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,QAA1B;AACD,KAND,CAMC,OAAME,GAAN,EAAU;AACTf,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBc,GAAvB;AACD;AACF,GApBD,MAqBK;AACHf,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeF,aAAf","sourcesContent":["import {useState} from 'react';\n//import { ethers } from \"ethers\";\nimport POSP from './POSP.json';\nimport { create } from 'ipfs-http-client';\nconst { ethers } = require(\"ethers\");\nconst POSPAddress = '0x176d3abcb6c27802AacCA2B29102081ea3767125';\n\nasync function usehandleMint(){\n  console.log(\"handlemint called\")\n  if (window.ethereum){\n    console.log(\"etherium detected\")\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(\n      POSPAddress,\n      POSP.abi,\n      signer\n    );\n    console.log(\"contract = \", contract)\n    try {\n      const response = await contract.mint(1,2);\n      //       const response = await contract.mint(BigNumber.from(mintAmount), {\n//          value: ethers.utils.parseEther((0.0001*mintAmount).toString())\n//        });\n      console.log('response: ', response);\n    }catch(err){\n      console.log(\"error: \", err)\n    }\n  }\n  else {\n    console.log(\"etherium not detected\")\n  }\n}\n\n// const MainMint = ({ accounts, setAccounts})=> {\n//   console.log(\"called main mint\")\n//   // const [mintAmount, setMintAmount] = useState(1);\n//   const isConnected = Boolean(accounts[0]);\n\n//   async function handleMint(){\n//     console.log(\"handlemint called\")\n//     if (window.ethereum){\n//       console.log(\"etherium detected\")\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       await provider.send(\"eth_requestAccounts\", []);\n//       const signer = provider.getSigner();\n//       const contract = new ethers.contract(\n//         POSPAddress,\n//         POSP.abi,\n//         signer\n//       );\n//       console.log(\"contract = \", contract)\n//       try {\n//         const response = await contract.mint(1,2);\n//         //       const response = await contract.mint(BigNumber.from(mintAmount), {\n// //          value: ethers.utils.parseEther((0.0001*mintAmount).toString())\n// //        });\n//         console.log('response: ', response);\n//       }catch(err){\n//         console.log(\"error: \", err)\n//       }\n//     }\n//     else {\n//       console.log(\"etherium not detected\")\n//     }\n//   }\n\n//   const handleDecrement = () =>{\n//     if(mintAmount<=1) return;\n//     setMintAmount (mintAmount -1);\n//   };\n\n//   const handleIncrement = () =>{\n// //   if(mintAmount >= 3) return;\n//     setMintAmount(mintAmount + 1)\n//   };\n\n//   return(\n//     <div>\n//        <p>Welcome to the future where your resume is a collection of NFTs</p>\n//        {isConnected?(\n//          <div>\n//            {/* <div>\n//              <button onClick={handleDecrement}>-</button>\n//              <input type=\"number\" value = {mintAmount}/>\n//              <button onClick={handleIncrement}>-</button>\n//            </div> */}\n//            {/* <button onClick = {handleMint}>Mint Now</button> */}\n//           </div>\n//        ):(\n//          <p>You are not connected to Mint. </p>\n//        )}\n//     </div>\n//   );\n// };\n\n// export default MainMint;\n\nexport default usehandleMint;\n"]},"metadata":{},"sourceType":"module"}